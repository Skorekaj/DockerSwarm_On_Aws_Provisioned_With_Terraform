[0m[1mdata.aws_vpc.default: Reading...[0m[0m
[0m[1mdata.aws_vpc.default: Read complete after 1s [id=vpc-0dcced5a18393590f][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_instance.Master1[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "Master1" {
      [32m+[0m[0m ami                                  = "ami-0b2ed2e3df8cf9080"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "aws"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Master1"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Master1"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "d9410a37aef49e54b5578da97ced71c729f2ccf7"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.Master2[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "Master2" {
      [32m+[0m[0m ami                                  = "ami-0b2ed2e3df8cf9080"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "aws"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Master2"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Master2"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "2eb090a86926f8b50a9150854f835decdbae4ba4"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.Master3[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "Master3" {
      [32m+[0m[0m ami                                  = "ami-0b2ed2e3df8cf9080"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "aws"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Master3"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Master3"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "2eb090a86926f8b50a9150854f835decdbae4ba4"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.Node1[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "Node1" {
      [32m+[0m[0m ami                                  = "ami-0b2ed2e3df8cf9080"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "aws"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Node1"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Node1"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "2eb090a86926f8b50a9150854f835decdbae4ba4"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.Node2[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "Node2" {
      [32m+[0m[0m ami                                  = "ami-0b2ed2e3df8cf9080"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "aws"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Node2"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Node2"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "2eb090a86926f8b50a9150854f835decdbae4ba4"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_security_group.swarm_server_sg_tf[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "swarm_server_sg_tf" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow Rules for Swarm servers"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "swarm-server-sg-tf"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = "vpc-0dcced5a18393590f"
    }

[1m  # aws_security_group_rule.allow_2377[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_2377" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "2377 for communication with and between manager nodes"
      [32m+[0m[0m from_port                = 2377
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 2377
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.allow_4789[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_4789" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "4789 UDP for overlay network traffic"
      [32m+[0m[0m from_port                = 4789
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 4789
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.allow_7946[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_7946" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "7946 TCP/UDP for overlay network node discovery"
      [32m+[0m[0m from_port                = 7946
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 7946
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.allow_8080[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_8080" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "8080 network traffic"
      [32m+[0m[0m from_port                = 8080
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8080
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.allow_all[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_all" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "allow all"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1mPlan:[0m 11 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m public_ip_Master1 = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m public_ip_Master2 = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m public_ip_Master3 = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m public_ip_Node1   = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m public_ip_Node2   = [
      [32m+[0m[0m (known after apply),
    ]
[0m[1maws_security_group.swarm_server_sg_tf: Creating...[0m[0m
[0m[1maws_security_group.swarm_server_sg_tf: Creation complete after 2s [id=sg-032459096162552ce][0m
[0m[1maws_security_group_rule.allow_8080: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_all: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_4789: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_2377: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_7946: Creating...[0m[0m
[0m[1maws_instance.Master3: Creating...[0m[0m
[0m[1maws_instance.Node1: Creating...[0m[0m
[0m[1maws_instance.Master1: Creating...[0m[0m
[0m[1maws_instance.Node2: Creating...[0m[0m
[0m[1maws_instance.Master2: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_all: Creation complete after 1s [id=sgrule-124762018][0m
[0m[1maws_security_group_rule.allow_8080: Creation complete after 1s [id=sgrule-444072418][0m
[0m[1maws_security_group_rule.allow_4789: Creation complete after 2s [id=sgrule-1168258653][0m
[0m[1maws_security_group_rule.allow_7946: Creation complete after 2s [id=sgrule-237621231][0m
[0m[1maws_security_group_rule.allow_2377: Creation complete after 3s [id=sgrule-1824658740][0m
[0m[1maws_instance.Node1: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.Master3: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.Master1: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.Node2: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.Master2: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.Master1: Creation complete after 12s [id=i-0783400b1d049c051][0m
[0m[1maws_instance.Master2: Creation complete after 12s [id=i-081d10dc15d6bd441][0m
[0m[1maws_instance.Node2: Creation complete after 12s [id=i-0364746947baa5993][0m
[0m[1maws_instance.Node1: Creation complete after 13s [id=i-0e43bacf063ef72b2][0m
[0m[1maws_instance.Master3: Creation complete after 13s [id=i-0a910804c5eb6c5a1][0m
[0m[1m[32m
Apply complete! Resources: 11 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mpublic_ip_Master1 = [
  "18.130.237.38",
]
public_ip_Master2 = [
  "18.132.43.190",
]
public_ip_Master3 = [
  "35.179.150.29",
]
public_ip_Node1 = [
  "18.170.34.188",
]
public_ip_Node2 = [
  "13.40.128.56",
]
